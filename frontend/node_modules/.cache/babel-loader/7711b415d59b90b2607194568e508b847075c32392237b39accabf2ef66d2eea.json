{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-308cdc5a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Reflect on These Questions\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"mb-4\"\n}, \"Take your time to think deeply about each question. Your honest responses will help guide the conversation with your partner.\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"mb-2\"\n};\nconst _hoisted_5 = [\"onUpdate:modelValue\", \"onInput\", \"placeholder\"];\nconst _hoisted_6 = {\n  class: \"text-right mb-2\"\n};\nconst _hoisted_7 = {\n  class: \"text-center\"\n};\nconst _hoisted_8 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.questions, (question, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"mb-6\"\n    }, [_createElementVNode(\"p\", _hoisted_4, _toDisplayString(question), 1 /* TEXT */), _withDirectives(_createElementVNode(\"textarea\", {\n      \"onUpdate:modelValue\": $event => $data.answers[index] = $event,\n      onInput: $event => $options.updateWordCount(index),\n      class: \"text-box\",\n      placeholder: 'Your answer to question ' + (index + 1)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_5), [[_vModelText, $data.answers[index]]]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", {\n      class: _normalizeClass({\n        'text-red-500': $data.wordCounts[index] < 30,\n        'text-green-500': $data.wordCounts[index] >= 30\n      })\n    }, _toDisplayString($data.wordCounts[index]) + \" / 30 words minimum \", 3 /* TEXT, CLASS */)])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.submitAnswers && $options.submitAnswers(...args)),\n    class: _normalizeClass([\"btn px-4 py-2 rounded transition-all duration-300\", {\n      'bg-blue-500 text-white hover:bg-blue-600': $options.allAnswersMeetWordCount,\n      'bg-gray-300 text-gray-500 cursor-not-allowed': !$options.allAnswersMeetWordCount\n    }]),\n    disabled: !$options.allAnswersMeetWordCount\n  }, \" I'm ready for the solution \", 10 /* CLASS, PROPS */, _hoisted_8)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","questions","question","index","key","_hoisted_4","_toDisplayString","$event","answers","onInput","$options","updateWordCount","placeholder","_hoisted_5","_hoisted_6","_normalizeClass","wordCounts","_hoisted_7","onClick","_cache","args","submitAnswers","allAnswersMeetWordCount","disabled","_hoisted_8"],"sources":["/Users/matthew.galloway@dataiku.com/realign-app/realign-connection-app/frontend/src/components/SecondPage.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Reflect on These Questions</h1>\n    <p class=\"mb-4\">Take your time to think deeply about each question. Your honest responses will help guide the conversation with your partner.</p>\n    \n    <div v-for=\"(question, index) in questions\" :key=\"index\" class=\"mb-6\">\n      <p class=\"mb-2\">{{ question }}</p>\n      <textarea \n        v-model=\"answers[index]\" \n        @input=\"updateWordCount(index)\"\n        class=\"text-box\"\n        :placeholder=\"'Your answer to question ' + (index + 1)\"\n      ></textarea>\n      <div class=\"text-right mb-2\">\n        <span :class=\"{ 'text-red-500': wordCounts[index] < 30, 'text-green-500': wordCounts[index] >= 30 }\">\n          {{ wordCounts[index] }} / 30 words minimum\n        </span>\n      </div>\n    </div>\n    \n    <div class=\"text-center\">\n      <button \n        @click=\"submitAnswers\"\n        class=\"btn px-4 py-2 rounded transition-all duration-300\"\n        :disabled=\"!allAnswersMeetWordCount\"\n        :class=\"{\n          'bg-blue-500 text-white hover:bg-blue-600': allAnswersMeetWordCount,\n          'bg-gray-300 text-gray-500 cursor-not-allowed': !allAnswersMeetWordCount\n        }\"\n      >\n        I'm ready for the solution\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport api from '../api'; \n\nexport default {\n  data() {\n    return {\n      questions: [],\n      originalText: '',\n      answers: [],\n      wordCounts: []\n    }\n  },\n  computed: {\n    allAnswersMeetWordCount() {\n      return this.wordCounts.every(count => count >= 30);\n    }\n  },\n  created() {\n    this.initializeData();\n  },\n  methods: {\n    initializeData() {\n      try {\n        const questionsData = JSON.parse(this.$route.query.questions || '[]');\n        this.questions = Array.isArray(questionsData) ? questionsData : Object.values(questionsData);\n        this.originalText = this.$route.query.originalText || '';\n        this.answers = new Array(this.questions.length).fill('');\n        this.wordCounts = new Array(this.questions.length).fill(0);\n        \n        console.log('Initialized data:', {\n          questions: this.questions,\n          originalText: this.originalText,\n          answers: this.answers,\n          wordCounts: this.wordCounts\n        });\n      } catch (error) {\n        console.error('Error initializing data:', error);\n        this.questions = [];\n        this.answers = [];\n        this.wordCounts = [];\n      }\n    },\n    updateWordCount(index) {\n      this.wordCounts[index] = this.answers[index].trim().split(/\\s+/).filter(word => word.length > 0).length;\n    },\n    async submitAnswers() {\n      if (!this.allAnswersMeetWordCount) return;\n      \n      try {\n        console.log('Submitting answers:', {\n          originalText: this.originalText,\n          questions: this.questions,\n          answers: this.answers\n        });\n\n        const response = await api.post('/api/generate-speech', {\n          originalText: this.originalText,\n          questions: this.questions,\n          answers: this.answers\n        });\n\n        console.log('Response:', response.data);\n\n        if (response.data.speech) {\n          console.log('Received speech data, navigating to ThirdPage');\n          this.$router.push({\n            name: 'ThirdPage',\n            query: { speech: JSON.stringify(response.data) }\n          });\n        } else {\n          throw new Error('No speech data in response');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        console.error('Error response:', error.response);\n        alert(`An error occurred: ${error.response?.data?.error || error.message}`);\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n.text-box {\n  width: 100%;\n  height: 100px;\n  margin-bottom: 10px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n.btn {\n  transition: all 0.3s ease;\n}\n.btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;gEACpBC,mBAAA,CAAmC,YAA/B,4BAA0B;gEAC9BA,mBAAA,CAAiJ;EAA9ID,KAAK,EAAC;AAAM,GAAC,+HAA6H;;EAGxIA,KAAK,EAAC;AAAM;mBANrB;;EAaWA,KAAK,EAAC;AAAiB;;EAOzBA,KAAK,EAAC;AAAa;mBApB5B;;uBACEE,mBAAA,CAgCM,OAhCNC,UAgCM,GA/BJC,UAAmC,EACnCC,UAAiJ,G,kBAEjJH,mBAAA,CAaMI,SAAA,QAlBVC,WAAA,CAKqCC,KAAA,CAAAC,SAAS,EAL9C,CAKiBC,QAAQ,EAAEC,KAAK;yBAA5BT,mBAAA,CAaM;MAbuCU,GAAG,EAAED,KAAK;MAAEX,KAAK,EAAC;QAC7DC,mBAAA,CAAkC,KAAlCY,UAAkC,EAAAC,gBAAA,CAAfJ,QAAQ,kB,gBAC3BT,mBAAA,CAKY;MAZlB,uBAAAc,MAAA,IAQiBP,KAAA,CAAAQ,OAAO,CAACL,KAAK,IAAAI,MAAA;MACrBE,OAAK,EAAAF,MAAA,IAAEG,QAAA,CAAAC,eAAe,CAACR,KAAK;MAC7BX,KAAK,EAAC,UAAU;MACfoB,WAAW,gCAAgCT,KAAK;6CAXzDU,UAAA,I,cAQiBb,KAAA,CAAAQ,OAAO,CAACL,KAAK,G,GAKxBV,mBAAA,CAIM,OAJNqB,UAIM,GAHJrB,mBAAA,CAEO;MAFAD,KAAK,EAdpBuB,eAAA;QAAA,gBAcwCf,KAAA,CAAAgB,UAAU,CAACb,KAAK;QAAA,kBAA0BH,KAAA,CAAAgB,UAAU,CAACb,KAAK;MAAA;wBACrFH,KAAA,CAAAgB,UAAU,CAACb,KAAK,KAAI,sBACzB,uB;kCAIJV,mBAAA,CAYM,OAZNwB,UAYM,GAXJxB,mBAAA,CAUS;IATNyB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEV,QAAA,CAAAW,aAAA,IAAAX,QAAA,CAAAW,aAAA,IAAAD,IAAA,CAAa;IACrB5B,KAAK,EAvBbuB,eAAA,EAuBc,mDAAmD;kDAEOL,QAAA,CAAAY,uBAAuB;uDAA6DZ,QAAA,CAAAY;;IADnJC,QAAQ,GAAGb,QAAA,CAAAY;KAKb,8BAED,yBA/BNE,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}